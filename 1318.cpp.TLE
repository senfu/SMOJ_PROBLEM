#include <cstdio>
#include <iostream>
using namespace std;
#define lowbit(x) ((x)&(-(x)))
#define getSum(x,y) ( (((x)+1)*((y)+1)*get(a,(x),(y),1)) \
						-(((y)+1)*get(ax,(x),(y),2))     \
						-(((x)+1)*get(ay,(x),(y),3))     \
						+get(axy,(x),(y),4) \
					)
typedef unsigned char BYTE;
typedef long long LL;
const int MAX_N = 8010;
BYTE a[MAX_N][MAX_N];
BYTE ax[MAX_N][MAX_N];
BYTE ay[MAX_N][MAX_N];
BYTE axy[MAX_N][MAX_N];
BYTE f[MAX_N][MAX_N];
int lastans;
int n,m,q,op,x1i,x2i,y1i,y2i,N;
LL ans = 0;

inline void add(BYTE A[MAX_N][MAX_N],int x,int y,int val,int type){
	register int tmp = 0;
	for(register int i=x;i<=N;i+=lowbit(i))
	for(register int j=y;j<=N;j+=lowbit(j)){
		if(f[i][j] & (1<<type))
		tmp = val - A[i][j];
		else
		tmp = val + A[i][j];
		if(tmp<0){
			tmp=-tmp;
			tmp%=q;
			A[i][j] = tmp;
			if((f[i][j] & (1<<type)) == 0)
			f[i][j]|=(1<<type);
		}
		else{
			tmp%=q;
			A[i][j] = tmp;
			if(f[i][j] & (1<<type))
			f[i][j]^=(1<<type);
		}
	}
	
	return;
}

inline LL get(BYTE A[MAX_N][MAX_N],int x,int y,int type){
	register LL sum = 0;
	for(register int i=x;i;i-=lowbit(i))
	for(register int j=y;j;j-=lowbit(j)){
		if(f[i][j] & (1<<type))
		sum-=A[i][j];
		else
		sum+=A[i][j];
	}
	return sum;
}


int main(){
	freopen("1318.in","r",stdin);
	freopen("1318.out","w",stdout);

	int x1,x2,y1,y2,tmp;
	char ch;

	scanf("%d %d %d",&n,&m,&q);
	N = n+1;

	while(m--){
		op=x1i=x2i=y1i=y2i=0;

		ch = getchar();
    	while (ch < '0' || ch > '9')
        	ch = getchar();
    	do
    	{
    	    op = op*10 + ch-'0';
    	    ch = getchar();
    	} while (ch >= '0' && ch <= '9');
    	
    	
    	ch = getchar();
    	while (ch < '0' || ch > '9')
        	ch = getchar();
    	do
    	{
    	    x1i = x1i*10 + ch-'0';
    	    ch = getchar();
    	} while (ch >= '0' && ch <= '9');
    	
    	
    	ch = getchar();
    	while (ch < '0' || ch > '9')
        	ch = getchar();
    	do
    	{
    	    x2i = x2i*10 + ch-'0';
    	    ch = getchar();
    	} while (ch >= '0' && ch <= '9');
    	
    	
    	
    	ch = getchar();
    	while (ch < '0' || ch > '9')
        	ch = getchar();
    	do
    	{
    	    y1i = y1i*10 + ch-'0';
    	    ch = getchar();
    	} while (ch >= '0' && ch <= '9');
    	
    	
		ch = getchar();
    	while (ch < '0' || ch > '9')
        	ch = getchar();
    	do
    	{
    	    y2i = y2i*10 + ch-'0';
    	    ch = getchar();
    	} while (ch >= '0' && ch <= '9');

		x1=(x1i+lastans)%n;
		x2=(x2i+lastans)%n;
		y1=(y1i+lastans)%n;
		y2=(y2i+lastans)%n;
		if(x2<x1) tmp = x2,x2 = x1, x1 = tmp;
		//swap(x2,x1);
		
		if(y2<y1) tmp = y2,y2 = y1, y1 = tmp;
		//swap(y2,y1);

		x1++;
		x2++;
		y1++;
		y2++;
		
		if(op&1){
			add(a,x1,y1,1,1);
			add(a,x2+1,y2+1,1,1);
			add(a,x2+1,y1,-1,1);
			add(a,x1,y2+1,-1,1);
	
			add(ax,x1,y1,x1,2);
			add(ax,x2+1,y2+1,x2+1,2);
			add(ax,x2+1,y1,-(x2+1),2);
			add(ax,x1,y2+1,-x1,2);
	
			add(ay,x1,y1,y1,3);
			add(ay,x2+1,y2+1,y2+1,3);
			add(ay,x2+1,y1,-y1,3);
			add(ay,x1,y2+1,-(y2+1),3);
	
			add(axy,x1,y1,x1*y1,4);
			add(axy,x2+1,y2+1,(x2+1)*(y2+1),4);
			add(axy,x2+1,y1,-(x2+1)*y1,4);
			add(axy,x1,y2+1,-x1*(y2+1),4);
		}
		else{
			ans = getSum(x2,y2)+getSum(x1-1,y1-1)-getSum(x2,y1-1)-getSum(x1-1,y2);
			if(ans < 0 )
			ans=ans+(-ans)/q*q + q;	
			ans%=q;
			lastans+=ans;
			printf("%lld\n",ans);
	
		}
	}
	
	return 0;
}
